{"Protocols/GRPCService.html#/s:9GRPCVapor11GRPCServiceP11serviceNameSSvp":{"name":"serviceName","abstract":"<p>A string containing the services name.</p>","parent_name":"GRPCService"},"Protocols/GRPCService.html#/s:9GRPCVapor11GRPCServiceP12handleMethod10methodName12vaporRequestAA14AnyCallHandler_pSgSS_5Vapor0H0CtF":{"name":"handleMethod(methodName:vaporRequest:)","abstract":"<p>Returns associated call handler of the service for a procedure call name and the associated Vapor <code>Request</code>.</p>","parent_name":"GRPCService"},"Protocols/GRPCRequestType.html#/s:9GRPCVapor15GRPCRequestTypeP12vaporRequest5Vapor0E0Cvp":{"name":"vaporRequest","abstract":"<p>Vapor <code>Request</code> from which the gRPC request was instantiated.</p>","parent_name":"GRPCRequestType"},"Protocols/GRPCRequestType.html#/s:9GRPCVapor15GRPCRequestTypePAAE2db9FluentKit8Database_pvp":{"name":"db","abstract":"<p><code>Database</code> associated with the requests Vapor <code>Request</code>.</p>","parent_name":"GRPCRequestType"},"Protocols/GRPCRequestType.html#/s:9GRPCVapor15GRPCRequestTypePAAE9eventLoop3NIO05EventE0_pvp":{"name":"eventLoop","abstract":"<p><code>EventLoop</code> on which the Vapor <code>Request</code> runs.</p>","parent_name":"GRPCRequestType"},"Protocols/GRPCModel.html#/s:9GRPCVapor9GRPCModelPxycfc":{"name":"init()","abstract":"<p>Initializes a <code>GRPCModel</code> without any parameter.","parent_name":"GRPCModel"},"Protocols/GRPCMessage.html#/s:9GRPCVapor11GRPCMessageP9ModelTypeQa":{"name":"ModelType","abstract":"<p>Every <code>GRPCMessage</code> is associated to a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/GRPCModel.html\">GRPCModel</a></code> from the existing code.</p>","parent_name":"GRPCMessage"},"Protocols/GRPCMessage.html#/s:9GRPCVapor11GRPCMessageP11modelObjectx9ModelTypeQz_tcfc":{"name":"init(modelObject:)","abstract":"<p>Initializes a <code>GRPCMessage</code> using an instance of the associated type.","parent_name":"GRPCMessage"},"Protocols/GRPCMessage.html#/s:9GRPCVapor11GRPCMessageP7toModel0D4TypeQzyF":{"name":"toModel()","abstract":"<p>Creates and returns an instance of the associated <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/GRPCModel.html\">GRPCModel</a></code> with the messages attribute values mapped to the model instance.</p>","parent_name":"GRPCMessage"},"Protocols/AnyCallHandler.html#/s:9GRPCVapor14AnyCallHandlerP12vaporRequest5Vapor0F0Cvp":{"name":"vaporRequest","abstract":"<p>Undocumented</p>","parent_name":"AnyCallHandler"},"Protocols/AnyCallHandler.html#/s:9GRPCVapor14AnyCallHandlerP13errorResponse5Vapor0F0Cvp":{"name":"errorResponse","abstract":"<p>Undocumented</p>","parent_name":"AnyCallHandler"},"Protocols/AnyCallHandler.html#/s:9GRPCVapor14AnyCallHandlerP8response3NIO15EventLoopFutureCy5Vapor8ResponseCGvp":{"name":"response","abstract":"<p>Undocumented</p>","parent_name":"AnyCallHandler"},"Protocols/AnyCallHandler.html":{"name":"AnyCallHandler","abstract":"<p>Undocumented</p>"},"Protocols/GRPCMessage.html":{"name":"GRPCMessage","abstract":"<p><code>GRPCMessage</code> is a protocol that is implemented by gRPC protocol buffer message structures that are generated by the code generator.</p>"},"Protocols/GRPCModel.html":{"name":"GRPCModel","abstract":"<p><code>GRPCModel</code> is a protocol that is implemented by models in the existing code to declare them ad gRPC messages.</p>"},"Protocols/GRPCRequestType.html":{"name":"GRPCRequestType","abstract":"<p><code>GRPCRequestType</code> is a protocol that is implemented by all gRPC request classes and requires attributes used by common default implementations.</p>"},"Protocols/GRPCService.html":{"name":"GRPCService","abstract":"<p><code>GRPCService</code> is a protocol that is implemented to declare gRPC services that can contain remote procedure calls."},"Enums/GRPCStream.html#/s:9GRPCVapor10GRPCStreamO5startyACyxG3NIO15EventLoopFutureCyAEGcAEmAA9GRPCModelRzlF":{"name":"start(_:)","abstract":"<p>Undocumented</p>","parent_name":"GRPCStream"},"Enums/GRPCStream.html#/s:9GRPCVapor10GRPCStreamO7messageyACyxGx_3NIO15EventLoopFutureCyAEGtcAEmAA9GRPCModelRzlF":{"name":"message(_:nextMessage:)","abstract":"<p>Undocumented</p>","parent_name":"GRPCStream"},"Enums/GRPCStream.html#/s:9GRPCVapor10GRPCStreamO3endyACyxGAEmAA9GRPCModelRzlF":{"name":"end","abstract":"<p>Undocumented</p>","parent_name":"GRPCStream"},"Enums/GRPCError.html#/s:9GRPCVapor9GRPCErrorO5erroryA2CmF":{"name":"error","abstract":"<p>Undocumented</p>","parent_name":"GRPCError"},"Enums/GRPCError.html":{"name":"GRPCError","abstract":"<p>Undocumented</p>"},"Enums/GRPCStream.html":{"name":"GRPCStream","abstract":"<p>Undocumented</p>"},"Classes/GRPCStreamRequest.html#/s:9GRPCVapor17GRPCStreamRequestC05vaporC05Vapor0C0Cvp":{"name":"vaporRequest","abstract":"<p>Vapor <code>Request</code> from which the gRPC request was instantiated. This reference is required by the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/GRPCRequestType.html\">GRPCRequestType</a></code> protocol.</p>","parent_name":"GRPCStreamRequest"},"Classes/GRPCStreamRequest.html#/s:9GRPCVapor17GRPCStreamRequestC7forEach6onNext3NIO15EventLoopFutureCyytGyxc_tF":{"name":"forEach(onNext:)","abstract":"<p>Handles incoming messages from the <code>messageStream</code> by calling the passed closure for each of these messages.","parent_name":"GRPCStreamRequest"},"Classes/GRPCStreamRequest.html#/s:9GRPCVapor17GRPCStreamRequestC7collect3NIO15EventLoopFutureCySayxGGyF":{"name":"collect()","abstract":"<p>Collects incoming messages from the <code>messageStream</code>and returns a future with an array of the collected <code>RequestModel</code>s.</p>","parent_name":"GRPCStreamRequest"},"Classes/GRPCStreamRequest.html#/s:9GRPCVapor17GRPCStreamRequestC12sendResponse7messageyq__tF":{"name":"sendResponse(message:)","abstract":"<p>Sends a response of type <code>ResponseModel</code> by succeeding the promise of the previous message with the response message value and a promise for the next stream message.</p>","parent_name":"GRPCStreamRequest"},"Classes/GRPCStreamRequest.html#/s:9GRPCVapor17GRPCStreamRequestC7sendEndyyF":{"name":"sendEnd()","abstract":"<p>Undocumented</p>","parent_name":"GRPCStreamRequest"},"Classes/GRPCStreamRequest.html#/s:9GRPCVapor17GRPCStreamRequestC14respondforEach6onNextyq_xc_tF":{"name":"respondforEach(onNext:)","abstract":"<p>Undocumented</p>","parent_name":"GRPCStreamRequest"},"Classes/GRPCServerStreamRequest.html#/s:9GRPCVapor23GRPCServerStreamRequestC7messagexvp":{"name":"message","abstract":"<p>Single incoming <code>RequestModel</code> value which type is defined by the class constraint.</p>","parent_name":"GRPCServerStreamRequest"},"Classes/GRPCServerStreamRequest.html#/s:9GRPCVapor23GRPCServerStreamRequestC05vaporD05Vapor0D0Cvp":{"name":"vaporRequest","abstract":"<p>Vapor <code>Request</code> from which the gRPC request was instantiated. This reference is required by the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/GRPCRequestType.html\">GRPCRequestType</a></code> protocol.</p>","parent_name":"GRPCServerStreamRequest"},"Classes/GRPCServerStreamRequest.html#/s:9GRPCVapor23GRPCServerStreamRequestC12sendResponse7messageyq__tF":{"name":"sendResponse(message:)","abstract":"<p>Sends a response of type <code>ResponseModel</code> by succeeding the promise of the previous message with the response message value and a promise for the next stream message.</p>","parent_name":"GRPCServerStreamRequest"},"Classes/GRPCServerStreamRequest.html#/s:9GRPCVapor23GRPCServerStreamRequestC7sendEndyyF":{"name":"sendEnd()","abstract":"<p>Ends the response stream by succeeding the promise of the previous message with a stream end message.</p>","parent_name":"GRPCServerStreamRequest"},"Classes/GRPCRequest.html#/s:9GRPCVapor11GRPCRequestC7messagexvp":{"name":"message","abstract":"<p>Single incoming <code>RequestModel</code> value which type is defined by the class constraint.</p>","parent_name":"GRPCRequest"},"Classes/GRPCRequest.html#/s:9GRPCVapor11GRPCRequestC12vaporRequest5Vapor0D0Cvp":{"name":"vaporRequest","abstract":"<p>Vapor <code>Request</code> from which the gRPC request was instantiated. This reference is required by the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/GRPCRequestType.html\">GRPCRequestType</a></code> protocol.</p>","parent_name":"GRPCRequest"},"Classes/GRPCRequest.html#/s:9GRPCVapor11GRPCRequestC7succeed5value3NIO15EventLoopFutureCyqd__Gqd___tAA9GRPCModelRd__lF":{"name":"succeed(value:)","abstract":"<p>Creates a succeeded future of a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/GRPCModel.html\">GRPCModel</a></code> type which is usually the response type on the event loop of the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/GRPCRequest.html#/s:9GRPCVapor11GRPCRequestC12vaporRequest5Vapor0D0Cvp\">vaporRequest</a></code>.","parent_name":"GRPCRequest"},"Classes/GRPCClientStreamRequest.html#/s:9GRPCVapor23GRPCClientStreamRequestC05vaporD05Vapor0D0Cvp":{"name":"vaporRequest","abstract":"<p>Vapor <code>Request</code> from which the gRPC request was instantiated. This reference is required by the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/GRPCRequestType.html\">GRPCRequestType</a></code> protocol.</p>","parent_name":"GRPCClientStreamRequest"},"Classes/GRPCClientStreamRequest.html#/s:9GRPCVapor23GRPCClientStreamRequestC7forEach6onNext3NIO15EventLoopFutureCyytGyxc_tF":{"name":"forEach(onNext:)","abstract":"<p>Handles incoming messages from the <code>messageStream</code> by calling the passed closure for each of these messages.","parent_name":"GRPCClientStreamRequest"},"Classes/GRPCClientStreamRequest.html#/s:9GRPCVapor23GRPCClientStreamRequestC7collect3NIO15EventLoopFutureCySayxGGyF":{"name":"collect()","abstract":"<p>Collects incoming messages from the <code>messageStream</code>and returns a future with an array of the collected <code>RequestModel</code>s.</p>","parent_name":"GRPCClientStreamRequest"},"Classes/GRPCClientStreamRequest.html#/s:9GRPCVapor23GRPCClientStreamRequestC7succeed5value3NIO15EventLoopFutureCyqd__Gqd___tlF":{"name":"succeed(value:)","abstract":"<p>Creates a succeeded future of a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/GRPCModel.html\">GRPCModel</a></code> type which is usually the response type on the event loop of the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/GRPCClientStreamRequest.html#/s:9GRPCVapor23GRPCClientStreamRequestC05vaporD05Vapor0D0Cvp\">vaporRequest</a></code>.","parent_name":"GRPCClientStreamRequest"},"Classes/GRPCMiddleware.html#/s:9GRPCVapor14GRPCMiddlewareC8servicesACSayAA11GRPCService_pG_tcfc":{"name":"init(services:)","abstract":"<p>Initializes a <code>GRPCMiddleware</code> using the <code>GRPCServices</code> passed as an argument.</p>","parent_name":"GRPCMiddleware"},"Classes/GRPCMiddleware.html#/s:9GRPCVapor14GRPCMiddlewareC10addServiceyyAA11GRPCService_pF":{"name":"addService(_:)","abstract":"<p>Adds <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/GRPCService.html\">GRPCService</a></code> instance to the <code>services</code> dictionary.</p>","parent_name":"GRPCMiddleware"},"Classes/GRPCMiddleware.html#/s:9GRPCVapor14GRPCMiddlewareC7respond2to10chainingTo3NIO15EventLoopFutureCy5Vapor8ResponseCGAJ7RequestC_AJ9Responder_ptF":{"name":"respond(to:chainingTo:)","abstract":"<p>Handles to incoming Vapor <code>Request</code>s and responds with an <code>EventLoopFuture</code> of a Vapor <code>Response</code>.</p>","parent_name":"GRPCMiddleware"},"Classes/UnaryCallHandler.html#/s:9GRPCVapor16UnaryCallHandlerC12vaporRequest5Vapor0F0Cvp":{"name":"vaporRequest","abstract":"<p>Undocumented</p>","parent_name":"UnaryCallHandler"},"Classes/UnaryCallHandler.html#/s:9GRPCVapor16UnaryCallHandlerC8response3NIO15EventLoopFutureCy5Vapor8ResponseCGvp":{"name":"response","abstract":"<p>Undocumented</p>","parent_name":"UnaryCallHandler"},"Classes/UnaryCallHandler.html#/s:9GRPCVapor16UnaryCallHandlerC09procedureC0y3NIO15EventLoopFutureCy9ModelTypeQy_GAA11GRPCRequestCyAHQzGcvp":{"name":"procedureCall","abstract":"<p>Undocumented</p>","parent_name":"UnaryCallHandler"},"Classes/UnaryCallHandler.html#/s:9GRPCVapor16UnaryCallHandlerC12vaporRequest09procedureC0ACyxq_G5Vapor0F0C_3NIO15EventLoopFutureCy9ModelTypeQy_GAA11GRPCRequestCyAMQzGctKcfc":{"name":"init(vaporRequest:procedureCall:)","abstract":"<p>Undocumented</p>","parent_name":"UnaryCallHandler"},"Classes/StreamingCallHandler.html#/s:9GRPCVapor20StreamingCallHandlerC12vaporRequest5Vapor0F0Cvp":{"name":"vaporRequest","abstract":"<p>Undocumented</p>","parent_name":"StreamingCallHandler"},"Classes/StreamingCallHandler.html#/s:9GRPCVapor20StreamingCallHandlerC8response3NIO15EventLoopFutureCy5Vapor8ResponseCGvp":{"name":"response","abstract":"<p>Undocumented</p>","parent_name":"StreamingCallHandler"},"Classes/StreamingCallHandler.html#/s:9GRPCVapor20StreamingCallHandlerC12vaporRequest09procedureC0ACyxq_G5Vapor0F0C_yAA010GRPCStreamF0Cy9ModelTypeQzALQy_GctKcfc":{"name":"init(vaporRequest:procedureCall:)","abstract":"<p>Undocumented</p>","parent_name":"StreamingCallHandler"},"Classes/ServerStreamingCallHandler.html#/s:9GRPCVapor26ServerStreamingCallHandlerC12vaporRequest5Vapor0G0Cvp":{"name":"vaporRequest","abstract":"<p>Undocumented</p>","parent_name":"ServerStreamingCallHandler"},"Classes/ServerStreamingCallHandler.html#/s:9GRPCVapor26ServerStreamingCallHandlerC8response3NIO15EventLoopFutureCy5Vapor8ResponseCGvp":{"name":"response","abstract":"<p>Undocumented</p>","parent_name":"ServerStreamingCallHandler"},"Classes/ServerStreamingCallHandler.html#/s:9GRPCVapor26ServerStreamingCallHandlerC12vaporRequest09procedureD0ACyxq_G5Vapor0G0C_yAA016GRPCServerStreamG0Cy9ModelTypeQzALQy_GctKcfc":{"name":"init(vaporRequest:procedureCall:)","abstract":"<p>Undocumented</p>","parent_name":"ServerStreamingCallHandler"},"Classes/ClientStreamingCallHandler.html#/s:9GRPCVapor26ClientStreamingCallHandlerC12vaporRequest5Vapor0G0Cvp":{"name":"vaporRequest","abstract":"<p>Undocumented</p>","parent_name":"ClientStreamingCallHandler"},"Classes/ClientStreamingCallHandler.html#/s:9GRPCVapor26ClientStreamingCallHandlerC8response3NIO15EventLoopFutureCy5Vapor8ResponseCGvp":{"name":"response","abstract":"<p>Undocumented</p>","parent_name":"ClientStreamingCallHandler"},"Classes/ClientStreamingCallHandler.html#/s:9GRPCVapor26ClientStreamingCallHandlerC09procedureD0y3NIO15EventLoopFutureCy9ModelTypeQy_GAA23GRPCClientStreamRequestCyAHQzGcvp":{"name":"procedureCall","abstract":"<p>Undocumented</p>","parent_name":"ClientStreamingCallHandler"},"Classes/ClientStreamingCallHandler.html#/s:9GRPCVapor26ClientStreamingCallHandlerC12vaporRequest09procedureD0ACyxq_G5Vapor0G0C_3NIO15EventLoopFutureCy9ModelTypeQy_GAA016GRPCClientStreamG0CyAMQzGctKcfc":{"name":"init(vaporRequest:procedureCall:)","abstract":"<p>Undocumented</p>","parent_name":"ClientStreamingCallHandler"},"Classes/ClientStreamingCallHandler.html":{"name":"ClientStreamingCallHandler","abstract":"<p>Undocumented</p>"},"Classes/ServerStreamingCallHandler.html":{"name":"ServerStreamingCallHandler","abstract":"<p>Undocumented</p>"},"Classes/StreamingCallHandler.html":{"name":"StreamingCallHandler","abstract":"<p>Undocumented</p>"},"Classes/UnaryCallHandler.html":{"name":"UnaryCallHandler","abstract":"<p>Undocumented</p>"},"Classes/GRPCMiddleware.html":{"name":"GRPCMiddleware","abstract":"<p>A <code>GRPCMiddleware</code> instance can be integrated as a middleware into the Vapor application like this:</p>"},"Classes/GRPCClientStreamRequest.html":{"name":"GRPCClientStreamRequest","abstract":"<p>A <code>GRPCClientStream</code> instance represents a client-streaming gRPC request that provides a <code>forEach</code> method which takes a closure that gets called for each incoming message of the stream, a <code>collect</code> method that returns all incoming messages collected as an array, and a generic <code>succeed</code> method to create a singe response future."},"Classes/GRPCRequest.html":{"name":"GRPCRequest","abstract":"<p>A <code>GRPCRequest</code> instance represents a unary gRPC request that provides the single incoming value and a generic <code>succeed</code> method to create a singe response future."},"Classes/GRPCServerStreamRequest.html":{"name":"GRPCServerStreamRequest","abstract":"<p>A <code>GRPCServerStreamRequest</code> instance represents a server-streaming gRPC request that provides the single incoming value and <code>sendResponse</code> and <code>sendEnd</code> methods to send a multiple responses."},"Classes/GRPCStreamRequest.html":{"name":"GRPCStreamRequest","abstract":"<p>Undocumented</p>"},"readme.html":{"name":"README"},"Guides.html":{"name":"Guides","abstract":"<p>The following guides are available globally.</p>"},"Classes.html":{"name":"Classes","abstract":"<p>The following classes are available globally.</p>"},"Enums.html":{"name":"Enumerations","abstract":"<p>The following enumerations are available globally.</p>"},"Protocols.html":{"name":"Protocols","abstract":"<p>The following protocols are available globally.</p>"}}